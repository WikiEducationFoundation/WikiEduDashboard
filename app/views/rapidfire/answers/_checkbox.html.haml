= render partial: "rapidfire/answers/errors", locals: {answer: answer}
= render partial: "rapidfire/answers/question_text", locals: {f: f, answer: answer}

.contextual{"data-required-checkbox" => required_question?(answer)}
  %em Select all that apply.

- options = answer_options(answer, @course)
- if options.nil? || options.length == 0
  %div{'data-remove-me' => true}
- elsif options.length > 0
  = f.fields_for :answer_text do |af|
    - options.each do |option|
      %label.survey__multiple-choice-field{tabindex: '-1'}
        - if option.is_a?(Array)
          = af.check_box nil, { id: nil, checked: checkbox_checked?(answer, option[0]), tabindex:'-1'}, option[0]
          .label= option[2].html_safe
        - else
          = af.check_box nil, { id: nil, checked: checkbox_checked?(answer, option), tabindex:'-1'}, option
          .label= option.html_safe
        .survey__multiple-choice-field__checkbox
    %label.survey__multiple-choice-field
      = af.check_box nil, { id: nil, checked: false, data: { void_checkboxes: true }, tabindex:'-1' }, 'None'
      .label None of the above
      .survey__multiple-choice-field__checkbox
- else
  %p No data available for #{answer.question.course_data_type}
