- content_for :after_title, " - #{t("application.my_dashboard")}"

#react_root{data: {default_course_type: @pres.default_course_type,
                   course_string_prefix: Features.default_course_string_prefix,
                   use_start_and_end_times: @pres.default_use_start_and_end_times ? 'true' : 'false'}}
.container.dashboard
  %header
    %h1= @pres.heading_message
    - if Features.open_course_creation?
      = render 'open_course_creation'
    - else
      = render 'course_creation'

  - # Show submitted/pending courses (for admins)
  - if @pres.submitted.any?
    %h2
      = t("courses.submitted_and_pending_heading")
    - @pres.submitted.each do |course|
      = render "course_row", course: course

  - # Orientation block
  - if @pres.show_orientation_block?
    %div.empty-state
      %p
        = t("dashboard.orientation_notice")
      %p
        = link_to @pres.orientation_path, class: 'button dark' do
          = t("dashboard.start_orientation")
          %i.icon.icon-rt_arrow
      %p.small
        = link_to t('dashboard.opt_out'), @pres.opt_out_path

  - if @pres.show_your_courses_label?
    %h2
      = t("#{@pres.course_string_prefix}.yourcourses")

  - # Empty courses state
  - if @pres.current.empty? && @pres.past.empty?
    - if @pres.can_create_course? && !Features.open_course_creation?
      %div.empty-state
        %p
          = t("dashboard.no_courses_instructor")
        %p
          = t("dashboard.create_note")
        %p.small
          = t("dashboard.create_preparation_note")
        %p.small
          = link_to t('dashboard.explore_examples'), explore_path
    - elsif @pres.show_explore_button?
      %div.empty-state
        %p
          = t("dashboard.no_courses_student")
        %p
          = t("dashboard.join_note")
        %p.small
          = link_to t('dashboard.explore_course_pages'), explore_path

  - else
    - # Courses list
    - if @pres.is_admin?
      = render "admin_courses"
    - else
      - @pres.current.each do |course|
        = render "course_row", course: course

    - # Archived/past courses
    - if @pres.past.any?
      %h2
        = t("#{@pres.course_string_prefix}.archived")
      - @pres.past.each do |course|
        = link_to course_slug_path(course.slug), {class: 'course course-past'} do
          %span.button.border
            = t("courses.view_page")
          %h2.course-title
            = course.title
            %span.course-term= course.term

  - if @blog_posts.present?
    = render "blog"

  - if @pres.is_campaign_organizer?

    %h2= t("campaign.campaigns")

    %section#campaigns
      %table.table.table--hoverable.table--sortable
        %thead
          %tr
            %th.sort.sortable.asc{"data-default-order" => "asc", "data-sort" => "title"}
              = t('campaign.campaigns')
              %span.sortable-indicator
            %th.sort.sortable{"data-default-order" => "desc", "data-sort" => "num-courses", style: "width: 150px"}
              .tooltip-trigger
                = t("#{Features.default_course_string_prefix}.courses")
                %span.sortable-indicator
            %th.sort.sortable{"data-default-order" => "desc", "data-sort" => "articles-created", style: "width: 180px"}
              .tooltip-trigger
                = t('metrics.articles_created')
                %span.sortable-indicator
            %th.sort.sortable{"data-default-order" => "desc", "data-sort" => "characters", style: "width: 172px;"}
              .tooltip-trigger
                = t("metrics.word_count")
                %span.sortable-indicator
                %span.tooltip-indicator
                .tooltip.dark
                  %p= course_i18n("word_count_doc")
            %th.sort.sortable{"data-default-order" => "desc", "data-sort" => "views", style: "width: 125px;"}
              .tooltip-trigger
                = t("metrics.view")
                %span.sortable-indicator
                %span.tooltip-indicator
                .tooltip.dark
                  %p= t("courses.view_doc")
            %th.sort.sortable{"data-default-order" => "desc", "data-sort" => "students", style: "width: 150px;"}
              = t("users.editors")
              %span.sortable-indicator
        %tbody.list
          - @pres.campaigns.each do |campaign|
            - campaign_presenter = CoursesPresenter.new(current_user: current_user, campaign_param: campaign.slug)
            = render 'campaigns/row', presenter: campaign_presenter, campaign: campaign
