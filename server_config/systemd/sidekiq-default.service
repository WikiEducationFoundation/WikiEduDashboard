# Based on https://github.com/mperham/sidekiq/blob/master/examples/systemd/sidekiq.service

[Unit]
Description=sidekiq-default
# start us only once the network and logging subsystems are available,
# consider adding redis-server.service if Redis is local and systemd-managed.
After=syslog.target network.target

# See these pages for lots of options:
# http://0pointer.de/public/systemd-man/systemd.service.html
# http://0pointer.de/public/systemd-man/systemd.exec.html
[Service]
Type=simple
WorkingDirectory=/var/www/dashboard/current

# NOTE: We keep concurrency at 1 for this process because it is the one that handles wiki edits, and we
# don't ever want to attempt two edits from the same account concurrently, as this can result in failed
# edits because mediawiki will only issue a user one valid edit token at a time.
ExecStart=/home/ragesoss/.rvm/bin/rvm default do bundle exec sidekiq -e production --queue default --concurrency 1
User=ragesoss
Group=project-globaleducation
UMask=0002

# Greatly reduce Ruby memory fragmentation and heap usage
# https://www.mikeperham.com/2018/04/25/taming-rails-memory-bloat/
Environment=MALLOC_ARENA_MAX=2

# if we crash, restart
RestartSec=1
Restart=on-failure

# output goes to /var/log/syslog
StandardOutput=syslog
StandardError=syslog

# This will default to "bundler" if we don't specify it
SyslogIdentifier=sidekiq-default

[Install]
WantedBy=multi-user.target

