name: Converted Workflow

on : [push,pull_request]
jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
       os: [ubuntu-latest]
      
       db:
         - mysql
      
    services:
         mariadb:
          image: mariadb:10.5
        
           ports:
           - 3306:3306
              
           options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
       
         
         redis:
          image: redis
    runs-on: ${{ matrix.os }}
 
    steps:
       - name: Installing system dependencies
         run: sudo apt-get install -y redis-server mariadb-server libmariadb-dev nodejs npm pandoc
       - uses: actions/checkout@v2
       - uses: ruby/setup-ruby@v1
         with:
           ruby-version: 2.7.1
       - name: Setup Node
         uses: actions/setup-node@v1
       - run: 'export PATH=$PATH:`yarn global bin`'
       - run: export DB=test
       - run: export SENDER_EMAIL_ADDRESS='sender@wikiedu.org'
       - name: Database and Build
         run: |
            mkdir tmp -m 777
            yarn install
            gem install bundler
            gem install rubocop
            gem install rubocop-rspec-focused
            bundle config set path 'vendor'
            bundle install --jobs=3 --retry=3
            bundle exec rubocop   
       - run : cp config/database.travis.yml config/database.yml
       - name: Start MariaDB
         uses: getong/mariadb-action@v1.1
       - name: running datatbase 
         env:
               RAILS_ENV: test
               mysql root password: wikiedu
               mysql database: dashboard_testing
               mysql user: wiki
               mysql password: wikiedu
         run: | 
              bundle install
              sudo service mysql start
              bundle install
              yarn
              yarn build
              bundle exec rake db:create
              bundle exec rake db:migrate RAILS_ENV=test

              
                  
#        - name: run test
#          run: |
#                bundle exec rake db:migrate
#                yarn build
#                COVERAGE=true bundle exec rspec --color --profile --format documentation
#                yarn lint-non-build
               
