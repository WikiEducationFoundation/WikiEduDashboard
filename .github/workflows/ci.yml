name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest 

    steps:
    
    # checks-out your repository under $GITHUB_WORKSPACE , so that workflow can access it.
      - uses: actions/checkout@v2
      
      - uses: r-lib/actions/setup-pandoc@v1
      
      - name: Starting Redis-Server
        uses: supercharge/redis-github-action@1.4.0
      
    #to speed up the execution time of Github Actions
      - name: Cache multiple paths  
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |-
            vendor
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
                ${{ runner.os }}-yarn-
      
    #Setting up test database from config/database.example.yml 
      - uses: getong/mariadb-action@v1.1  
        with:
          host port: 3306 
          mariadb version: '10.5' 
          mysql database: 'dashboard_testing' 
          mysql user: 'wiki'
          mysql password: 'wikiedu'
          
      
      - uses: ruby/setup-ruby@v1    
        with:
           ruby-version: 2.7.1
           bundler-cache: true

           
      - name: Setup Node
        uses: actions/setup-node@v1
               
            
      - run: mkdir tmp -m 777
      - run: cp config/database.example.yml config/database.yml
      - run: cp config/application.example.yml config/application.yml

      - name:  Running Test Database 
        env:
          RAILS_ENV: test
          DATABASE_PORT: 3306
        run: |
            bin/rails db:migrate RAILS_ENV=test
      
      - name: Running tests   
        run: |
            yarn build
            yarn run test  
            COVERAGE=true bundle exec rspec spec/ --fail-fast --color --profile --format documentation
            
      - name: Running linters
        run: |
            bundle exec rubocop
            yarn lint-non-build
    
              
      
     
