language: ruby
rvm: 2.1.5
sudo: false
cache:
  apt: true
  directories:
  - vendor
  - node_modules
addons:
  apt:
    sources:
    - ubuntu-sdk-team
    packages:
    - libqt5webkit5-dev
    - qtdeclarative5-dev
    - pandoc


before_install:
  # Decrypt and add SSH key
  - openssl aes-256-cbc -K $encrypted_513b9a3c0df8_key -iv $encrypted_513b9a3c0df8_iv -in config/deploy_travis_id_rsa.enc -out config/deploy_travis_id_rsa -d
  - chmod 600 config/deploy_travis_id_rsa
  - eval `ssh-agent -s`
  - ssh-add config/deploy_travis_id_rsa

  # Export QMAKE for libqt5webkit5-dev
  - export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake

  # Set the database.
  - export DB=test

  # Set up a headless display so capybara will work.
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start

  # Use specific node versions
  - nvm install v4.2.1
  - nvm use v4.2.1
  - node --version


install:
  - npm install -g npm
  - npm --version
  - npm install gulp -g
  - npm install bower -g
  - npm install
  - bower install
  - bundle install --jobs=3 --retry=3 --deployment


before_script:
  # Set up our database.
  - cp config/database.travis.yml config/database.yml
  - mysql -e "CREATE DATABASE test DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;"
  - bundle exec rake db:migrate RAILS_ENV=test

script: gulp build && npm test && bundle exec rspec --color --format documentation

after_script:
  - bundle exec rubocop -R

after_success:
  # Deploy with Capistrano if the branch is production or staging
  - if [ $TRAVIS_BRANCH = 'production' ]; then bundle exec cap production deploy skip_gulp=true; fi
  - if [ $TRAVIS_BRANCH = 'staging' ]; then bundle exec cap staging deploy skip_gulp=true; fi


notifications:
  slack:
    rooms:
    - secure: OZcMEKx3prPJva4P6W0E55pSMWnTWdm7d6bBZ6B66LewU9Ge6parEJcaUAAH+sNbi0lvDvMG7Ivs9FKHDU3DoJXNmKG1ow4QpZ0EIMkaBxUWgQRELw2l375G+8vz/VpH3W4zTmVsYWmcaMSER+PmclnBMGQma8vR8JVLVuIDMHU=
